{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container/Container.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onAddContact","useState","name","setName","number","setNumber","handleChange","e","target","value","className","s","text","onSubmit","preventDefault","Number","isNaN","alert","text_contact","text_input","type","placeholder","onChange","text_button","ContactList","contacts","onDeleteContact","list","map","contact","text_item","text_info","text_delete","onClick","id","propType","ontacts","PropTypes","arrayOf","shape","string","isRequired","Filter","onChangeFilter","container_filter","filter_info","filter_text","Container","children","container","App","setContacts","filter","setFilter","getVisiebileContacts","toLowerCase","includes","find","uuidv4","prevState","length","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc248d37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2UQGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactForm_text__3iC_1\",\"text_contact\":\"ContactForm_text_contact__6HX-p\",\"text_input\":\"ContactForm_text_input__QMobI\",\"text_button\":\"ContactForm_text_button__1O0wd\"};","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = ({ onAddContact }) => {\r\n//   state = {\r\n//     number: \"\",\r\n//     name: \"\",\r\n//   };\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n const handleSubmit = (e) => {\r\n    e.preventDefault();\r\nif (!name || !number) {\r\n      alert('Вы не ввели все контактные данные');\r\n      return;\r\n    }\r\n\r\n    if (Number.isNaN(+number)) {\r\n      alert('Телефонный номер должен содержать только цифры');\r\n      return;\r\n    }\r\n    // this.props.onAddContact({ ...this.state });\r\n\r\n    // this.setState({ name: \"\", number: \"\" });\r\n      onAddContact(name, number);\r\n      setName('');\r\n      setNumber('')\r\n  };\r\n\r\n\r\n\r\n\r\n const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // this.setState({\r\n    //   [name]: value,\r\n    // });\r\n      switch (name) {\r\n          case 'name':\r\n\r\n              setName(value);\r\n\r\n              break\r\n          \r\n          case 'number':\r\n\r\n              setNumber(value);\r\n\r\n              break\r\n          \r\n          default:\r\n              return;\r\n      }\r\n  };\r\n\r\n   \r\n    return (\r\n      <form className={s.text} onSubmit={handleSubmit}>\r\n        <label className={s.text_contact}>\r\n          <input\r\n            className={s.text_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Michael Jordan\"\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.text_contact}>\r\n          <input\r\n            className={s.text_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"555-55-555\"\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button className={s.text_button} type=\"submit\">\r\n          Add contacts\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n\r\n\r\n// ContactForm.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   number: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport default ContactForm;","\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map((contact) => (\r\n      <li className={s.text_item} key={contact.id}>\r\n        <p className={s.text_info}>{contact.name + \":\" + contact.number}</p>\r\n        {\r\n          <button\r\n            className={s.text_delete}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            удалить\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propType = {\r\n  ontacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={s.container_filter}>\r\n      <p className={s.filter_info}>Find contacts by name</p>\r\n      <input\r\n        className={s.filter_text}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Container from \"./components/Container/Container.js\";\n\nconst App = () => {\n  // state = {\n  //   contacts: [\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  //   ],\n  //   filter: \"\",\n  // };\n\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n\n  const addContact = (name, number) => {\n     if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} уже есть в списке ваших контактов`);\n      return;\n     }\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    setContacts(prevState => [...prevState, contact]);\n  };\n\n  //   if (searchSameName) {\n  //     alert(`${task.name} is already in contacts`);\n  //   } else if (task.name.length === 0) {\n  //     alert(\"Fields must be filled!\");\n  //   } else {\n  //     const contact = { ...task, id: uuidv4() };\n  //     setContacts(prevState => \n  //       [...prevState.contacts, contact],\n  //     );\n  //   }\n  // };\n\n  const getVisiebileContacts = () => {\n    \n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    // this.setState((prevState) => {\n    //   return {\n    //     contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    //   };\n    // });\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n const changeFilter = filter => {\n    // setFilter({ filter: e.currentTarget.value });\n    setFilter(filter);\n  };\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parseContacts = JSON.parse(contacts);\n  //   if (parseContacts) {\n  //     this.setState({ contacts: parseContacts });\n  //   }\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     console.log(\"App ComponentDidUpdate\");\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n  \n    // const { filter } = this.state;\n    // const visibleContacts = this.getVisiebileContacts();\n    return (\n      <Container>\n        <ContactForm onAddContact={addContact} />\n\n        {getVisiebileContacts().length > 1 && (\n          <Filter value={filter} onChangeFilter={changeFilter} />\n        )}\n        {getVisiebileContacts().length > 0 && (\n          <ContactList\n            contacts={getVisiebileContacts()}\n            onDeleteContact={deleteContact}\n          />\n        )}\n      </Container>\n    );\n  }\n\n\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2AUYP\",\"text_item\":\"ContactList_text_item__2twYd\",\"text_delete\":\"ContactList_text_delete__10aMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_text\":\"Filter_filter_text__1w0I9\",\"container_filter\":\"Filter_container_filter__2LgvS\",\"filter_info\":\"Filter_filter_info__d2r1-\"};"],"sourceRoot":""}